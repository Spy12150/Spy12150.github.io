{"ast":null,"code":"var _jsxFileName = \"/Users/ivorylove/Documents/Code/blackjack-emulator/Frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSprings, animated } from 'react-spring';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const suits = [\"Hearts\", \"Diamonds\", \"Clubs\", \"Spades\"];\n  const ranks = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"Jack\", \"Queen\", \"King\", \"Ace\"];\n  const [deck, setDeck] = useState([]);\n  const [playerHand, setPlayerHand] = useState([]);\n  const [dealerHand, setDealerHand] = useState([]);\n  const [dealerVisible, setDealerVisible] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [playerWon, setPlayerWon] = useState(null);\n  const [chipCount, setChipCount] = useState(1000);\n  const [currentBet, setCurrentBet] = useState(0);\n  const [pendingBet, setPendingBet] = useState('');\n  const [betCounter, setBetCounter] = useState(0);\n  useEffect(() => {\n    setDeck(createDeck());\n  }, []);\n  const [playerSprings] = useSprings(playerHand.length, index => ({\n    from: {\n      transform: 'translateX(-100px)',\n      opacity: 0\n    },\n    to: {\n      transform: 'translateX(0)',\n      opacity: 1\n    },\n    delay: index * 100\n  }), [playerHand.length]);\n  function handleBetAmountChange(event) {\n    const value = event.target.value;\n    const amount = parseInt(value, 10);\n    if (value === '') {\n      setPendingBet('');\n    } else if (!isNaN(amount) && amount >= 0) {\n      setPendingBet(amount);\n    }\n  }\n  function confirmBet() {\n    const amount = parseInt(pendingBet, 10) || 0;\n    if (isNaN(amount) || amount <= 0) {\n      alert(\"Please place a valid bet.\");\n      return;\n    }\n    if (amount > chipCount) {\n      alert(\"Bet amount exceeds chip count.\");\n      return;\n    }\n    setCurrentBet(amount);\n    setChipCount(prevCount => prevCount - amount);\n    setPendingBet('');\n    setGameOver(false);\n    setPlayerWon(null);\n    setBetCounter(prevCounter => prevCounter + 1);\n  }\n  useEffect(() => {\n    if (betCounter > 0 && !gameOver) {\n      deal();\n    }\n  }, [betCounter, gameOver]);\n  function createDeck() {\n    let newDeck = [];\n    for (let suit of suits) {\n      for (let rank of ranks) {\n        newDeck.push({\n          suit,\n          rank,\n          value: getValue(rank),\n          image: `/PNG-cards-1.3/${rank.toLowerCase()}_of_${suit.toLowerCase()}.png`\n        });\n      }\n    }\n    return shuffle(newDeck);\n  }\n  function shuffle(deck) {\n    for (let i = deck.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [deck[i], deck[j]] = [deck[j], deck[i]];\n    }\n    return deck;\n  }\n  function getValue(rank) {\n    if ([\"Jack\", \"Queen\", \"King\"].includes(rank)) {\n      return 10;\n    } else if (rank === \"Ace\") {\n      return 11;\n    } else {\n      return parseInt(rank);\n    }\n  }\n  function startGame() {\n    setChipCount(1000);\n    setCurrentBet(0);\n    setPendingBet('');\n    setPlayerHand([]);\n    setDealerHand([]);\n    setDealerVisible(false);\n    setGameOver(false);\n    setPlayerWon(null);\n    setBetCounter(0);\n  }\n  function deal() {\n    if (currentBet <= 0) {\n      alert(\"Please place a bet first.\");\n      return;\n    }\n    const newDeck = createDeck();\n    const playerInitialHand = [newDeck.pop(), newDeck.pop()];\n    const dealerInitialHand = [newDeck.pop(), newDeck.pop()];\n    setDeck(newDeck);\n    setPlayerHand(playerInitialHand);\n    setDealerHand(dealerInitialHand);\n    setDealerVisible(false);\n    setGameOver(false);\n    setPlayerWon(null);\n  }\n  function hit() {\n    if (!gameOver && currentBet > 0) {\n      const newDeck = [...deck];\n      const newPlayerHand = [...playerHand, newDeck.pop()];\n      setDeck(newDeck);\n      setPlayerHand(newPlayerHand);\n      if (getHandValue(newPlayerHand) > 21) {\n        setDealerVisible(true);\n        setGameOver(true);\n        setPlayerWon(false);\n      }\n    }\n  }\n  function stand() {\n    if (currentBet > 0) {\n      let newDealerHand = [...dealerHand];\n      const newDeck = [...deck];\n      setDealerVisible(true);\n      let dealerHandValue = getHandValue(newDealerHand);\n      while (dealerHandValue < 17) {\n        newDealerHand.push(newDeck.pop());\n        dealerHandValue = getHandValue(newDealerHand);\n      }\n      setDeck(newDeck);\n      setDealerHand(newDealerHand);\n      const playerScore = getHandValue(playerHand);\n      const dealerScore = dealerHandValue;\n      if (dealerScore > 21 || playerScore > dealerScore) {\n        setPlayerWon(true);\n        setChipCount(prevCount => prevCount + currentBet * 2);\n      } else if (playerScore < dealerScore) {\n        setPlayerWon(false);\n      } else {\n        setPlayerWon(null);\n        setChipCount(prevCount => prevCount + currentBet);\n      }\n      setGameOver(true);\n    } else {\n      alert(\"Please place a bet before standing.\");\n    }\n  }\n  function getHandValue(hand) {\n    let value = hand.reduce((acc, card) => acc + card.value, 0);\n    let aces = hand.filter(card => card.rank === \"Ace\").length;\n    while (value > 21 && aces > 0) {\n      value -= 10;\n      aces -= 1;\n    }\n    return value;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ivory's Blackjack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startGame,\n            style: {\n              marginRight: '10px'\n            },\n            children: \"Reset Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chip-count\",\n          children: [\"Chips: \", chipCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"betting-controls\",\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: pendingBet,\n          onChange: handleBetAmountChange,\n          placeholder: \"Place your bet\",\n          style: {\n            marginRight: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: confirmBet,\n          children: \"Place Bet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hand\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Player's Hand (\", getHandValue(playerHand), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards\",\n          children: playerSprings.map((styles, index) => /*#__PURE__*/_jsxDEV(animated.div, {\n            style: styles,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: playerHand[index].image,\n              alt: `${playerHand[index].rank} of ${playerHand[index].suit}`,\n              style: {\n                width: '100px',\n                height: 'auto',\n                marginRight: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: hit,\n            style: {\n              marginRight: '10px'\n            },\n            children: \"Hit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: stand,\n            children: \"Stand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hand\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Dealer's Hand (\", dealerVisible ? getHandValue(dealerHand) : '?', \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards\",\n          children: dealerHand.map((card, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: dealerVisible || index === 0 ? card.image : \"/PNG-cards-1.3/cardback.png\",\n            alt: dealerVisible || index === 0 ? `${card.rank} of ${card.suit}` : \"Hidden Card\",\n            style: {\n              width: '100px',\n              height: 'auto',\n              marginRight: '5px'\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outcome\",\n        style: {\n          marginTop: '20px'\n        },\n        children: [playerWon === true && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You won!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 36\n        }, this), playerWon === false && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You lost!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 37\n        }, this), playerWon === null && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"It's a tie!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bbxpggh3M8lxbhXzkqkD1JkwwXw=\", false, function () {\n  return [useSprings];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useSprings","animated","jsxDEV","_jsxDEV","App","_s","suits","ranks","deck","setDeck","playerHand","setPlayerHand","dealerHand","setDealerHand","dealerVisible","setDealerVisible","gameOver","setGameOver","playerWon","setPlayerWon","chipCount","setChipCount","currentBet","setCurrentBet","pendingBet","setPendingBet","betCounter","setBetCounter","createDeck","playerSprings","length","index","from","transform","opacity","to","delay","handleBetAmountChange","event","value","target","amount","parseInt","isNaN","confirmBet","alert","prevCount","prevCounter","deal","newDeck","suit","rank","push","getValue","image","toLowerCase","shuffle","i","j","Math","floor","random","includes","startGame","playerInitialHand","pop","dealerInitialHand","hit","newPlayerHand","getHandValue","stand","newDealerHand","dealerHandValue","playerScore","dealerScore","hand","reduce","acc","card","aces","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","alignItems","width","onClick","marginRight","marginTop","type","onChange","placeholder","map","styles","div","src","alt","height","_c","$RefreshReg$"],"sources":["/Users/ivorylove/Documents/Code/blackjack-emulator/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSprings, animated } from 'react-spring';\nimport \"./App.css\";\n\nfunction App() {\n  const suits = [\"Hearts\", \"Diamonds\", \"Clubs\", \"Spades\"];\n  const ranks = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"Jack\", \"Queen\", \"King\", \"Ace\"];\n\n  const [deck, setDeck] = useState([]);\n  const [playerHand, setPlayerHand] = useState([]);\n  const [dealerHand, setDealerHand] = useState([]);\n  const [dealerVisible, setDealerVisible] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [playerWon, setPlayerWon] = useState(null);\n  const [chipCount, setChipCount] = useState(1000); \n  const [currentBet, setCurrentBet] = useState(0); \n  const [pendingBet, setPendingBet] = useState(''); \n  const [betCounter, setBetCounter] = useState(0);\n\n  useEffect(() => {\n    setDeck(createDeck());\n  }, []);\n\n  const [playerSprings] = useSprings(playerHand.length, index => ({\n    from: { transform: 'translateX(-100px)', opacity: 0 },\n    to: { transform: 'translateX(0)', opacity: 1 },\n    delay: index * 100,\n  }), [playerHand.length]);\n\n  function handleBetAmountChange(event) {\n    const value = event.target.value;\n    const amount = parseInt(value, 10);\n\n    if (value === '') {\n      setPendingBet('');\n    } else if (!isNaN(amount) && amount >= 0) {\n      setPendingBet(amount);\n    }\n  }\n\n  function confirmBet() {\n    const amount = parseInt(pendingBet, 10) || 0;\n\n    if (isNaN(amount) || amount <= 0) {\n      alert(\"Please place a valid bet.\");\n      return;\n    }\n\n    if (amount > chipCount) {\n      alert(\"Bet amount exceeds chip count.\");\n      return;\n    }\n\n    setCurrentBet(amount);\n    setChipCount(prevCount => prevCount - amount);\n    setPendingBet('');\n    setGameOver(false);\n    setPlayerWon(null);\n    setBetCounter(prevCounter => prevCounter + 1);\n  }\n\n  useEffect(() => {\n    if (betCounter > 0 && !gameOver) {\n      deal();\n    }\n  }, [betCounter, gameOver]);\n\n  function createDeck() {\n    let newDeck = [];\n    for (let suit of suits) {\n      for (let rank of ranks) {\n        newDeck.push({\n          suit,\n          rank,\n          value: getValue(rank),\n          image: `/PNG-cards-1.3/${rank.toLowerCase()}_of_${suit.toLowerCase()}.png`,\n        });\n      }\n    }\n    return shuffle(newDeck);\n  }\n\n  function shuffle(deck) {\n    for (let i = deck.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [deck[i], deck[j]] = [deck[j], deck[i]];\n    }\n    return deck;\n  }\n\n  function getValue(rank) {\n    if ([\"Jack\", \"Queen\", \"King\"].includes(rank)) {\n      return 10;\n    } else if (rank === \"Ace\") {\n      return 11;\n    } else {\n      return parseInt(rank);\n    }\n  }\n\n  function startGame() {\n    setChipCount(1000);\n    setCurrentBet(0);\n    setPendingBet('');\n    setPlayerHand([]);\n    setDealerHand([]);\n    setDealerVisible(false);\n    setGameOver(false);\n    setPlayerWon(null);\n    setBetCounter(0);\n  }\n\n  function deal() {\n    if (currentBet <= 0) {\n      alert(\"Please place a bet first.\");\n      return;\n    }\n\n    const newDeck = createDeck();\n    const playerInitialHand = [newDeck.pop(), newDeck.pop()];\n    const dealerInitialHand = [newDeck.pop(), newDeck.pop()];\n\n    setDeck(newDeck);\n    setPlayerHand(playerInitialHand);\n    setDealerHand(dealerInitialHand);\n    setDealerVisible(false);\n    setGameOver(false);\n    setPlayerWon(null);\n  }\n\n  function hit() {\n    if (!gameOver && currentBet > 0) {\n      const newDeck = [...deck];\n      const newPlayerHand = [...playerHand, newDeck.pop()];\n      setDeck(newDeck);\n      setPlayerHand(newPlayerHand);\n\n      if (getHandValue(newPlayerHand) > 21) {\n        setDealerVisible(true);\n        setGameOver(true);\n        setPlayerWon(false);\n      }\n    }\n  }\n\n  function stand() {\n    if (currentBet > 0) {\n      let newDealerHand = [...dealerHand];\n      const newDeck = [...deck];\n      setDealerVisible(true);\n\n      let dealerHandValue = getHandValue(newDealerHand);\n      while (dealerHandValue < 17) {\n        newDealerHand.push(newDeck.pop());\n        dealerHandValue = getHandValue(newDealerHand);\n      }\n\n      setDeck(newDeck);\n      setDealerHand(newDealerHand);\n      const playerScore = getHandValue(playerHand);\n      const dealerScore = dealerHandValue;\n\n      if (dealerScore > 21 || playerScore > dealerScore) {\n        setPlayerWon(true);\n        setChipCount(prevCount => prevCount + currentBet * 2);\n      } else if (playerScore < dealerScore) {\n        setPlayerWon(false);\n      } else {\n        setPlayerWon(null);\n        setChipCount(prevCount => prevCount + currentBet);\n      }\n\n      setGameOver(true);\n    } else {\n      alert(\"Please place a bet before standing.\");\n    }\n  }\n\n  function getHandValue(hand) {\n    let value = hand.reduce((acc, card) => acc + card.value, 0);\n    let aces = hand.filter((card) => card.rank === \"Ace\").length;\n\n    while (value > 21 && aces > 0) {\n      value -= 10;\n      aces -= 1;\n    }\n\n    return value;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Ivory's Blackjack</h1>\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '100%' }}>\n          <div>\n            <button onClick={startGame} style={{ marginRight: '10px' }}>Reset Game</button>\n          </div>\n          <div className=\"chip-count\">\n            Chips: {chipCount}\n          </div>\n        </div>\n        <div className=\"betting-controls\" style={{ marginTop: '20px' }}>\n          <input\n            type=\"number\"\n            value={pendingBet}\n            onChange={handleBetAmountChange}\n            placeholder=\"Place your bet\"\n            style={{ marginRight: '10px' }}\n          />\n          <button onClick={confirmBet}>Place Bet</button>\n        </div>\n        <div className=\"hand\">\n          <h2>Player's Hand ({getHandValue(playerHand)})</h2>\n          <div className=\"cards\">\n            {playerSprings.map((styles, index) => (\n              <animated.div style={styles} key={index}>\n                <img\n                  src={playerHand[index].image}\n                  alt={`${playerHand[index].rank} of ${playerHand[index].suit}`}\n                  style={{ width: '100px', height: 'auto', marginRight: '5px' }}\n                />\n              </animated.div>\n            ))}\n          </div>\n          {!gameOver && (\n            <div style={{ marginTop: '20px' }}>\n              <button onClick={hit} style={{ marginRight: '10px' }}>Hit</button>\n              <button onClick={stand}>Stand</button>\n            </div>\n          )}\n        </div>\n        <div className=\"hand\">\n          <h2>Dealer's Hand ({dealerVisible ? getHandValue(dealerHand) : '?'})</h2>\n          <div className=\"cards\">\n            {dealerHand.map((card, index) => (\n              <img\n                key={index}\n                src={dealerVisible || index === 0 ? card.image : \"/PNG-cards-1.3/cardback.png\"}\n                alt={dealerVisible || index === 0 ? `${card.rank} of ${card.suit}` : \"Hidden Card\"}\n                style={{ width: '100px', height: 'auto', marginRight: '5px' }}\n              />\n            ))}\n          </div>\n        </div>\n        {gameOver && (\n          <div className=\"outcome\" style={{ marginTop: '20px' }}>\n            {playerWon === true && <p>You won!</p>}\n            {playerWon === false && <p>You lost!</p>}\n            {playerWon === null && <p>It's a tie!</p>}\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}